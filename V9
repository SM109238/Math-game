from tkinter import *
import random


#quit button
def quit():
    main_window.destroy()

#name entry
def validate_name():
    name = entry_box1.get()
    if not name:
        error_label.config(text="Enter your name", fg="red")
        return False
    elif name.isdigit():
        error_label.config(text="Please enter in alphabets", fg="red")
        return False
    else:
        error_label.config(text=" ", fg="red")
        return True
    
#choose level window 
def ChooseLevelWindow():
    if not validate_name():
        return
    
    ChooseLevel = Toplevel(main_window)
    ChooseLevel.title("Choose Level")
    ChooseLevel.geometry("200x205")
    ChooseLevel.configure(bg = 'cadet blue')
    
    def exit():
        ChooseLevel.destroy()

#Easy window
    def Easy_window():
        def exit():
            Easy.destroy()
            
        Easy = Toplevel(ChooseLevel)
        Easy.title("Easy level")
        Easy.geometry("650x450")
        Easy.configure(bg='aquamarine4')

        color3 = 'aquamarine4'
        body = ('Verdana', 10)
        
        
        Label(Easy, text=entry_box1.get(), bg=color3, font=body).grid(row=1, column=3, padx=(250,5), pady=(0,0))#name
        Button(Easy, text="Quit", command=exit, font=body).grid(row=0, column=4, sticky=W, padx=(200,600), pady=(0,0))#quit button

        question_num = IntVar(value=0)

        def update_question_num():
            if question_num.get() < 5:
                question_num.set(question_num.get() +1)
                
        Label(Easy, text="Question n.o:", bg=color3, font=body).grid(row=3, column=1) #question n.o

        question_num_label = Label(Easy, textvariable=question_num, bg=color3, font=body)
        question_num_label.grid(row=3, column=2)

        Label(Easy, text="L1:Easy", bg=color3, font=body).grid(row=3, column=4, padx=(100,500), pady=(0,1))#Level

        num = [1, 2, 3, 4, 5, 6, 7, 8, 9]  
        def submit(var1):
            body_font = ('Verdana', 10)
            colour1= 'red'
            colour2= 'green'
            if var1.get() == str(resultPLUS()):
                correct = Label(Easy, text="Correct!", font=body_font, bg=colour2)
                correct.place(relx=0.5, rely=0.2)
                
                
            else:
                wrong = Label(Easy, text="Wrong!", font=body_font, bg=colour1)
                wrong.place(relx=0.5, rely=0.2)
                entry_box2.delete(0, "end")
      
        def try_again():
            if question_num.get() >=5: #stop after 5 questions
                return
            
            body_font = ('Verdana', 10)
            try_again.num1update = random.choice(num)
            try_again.num2update = random.choice(num)
            try_again.operation = random.choice(['+', '-'])

            if try_again.operation == '+':
                question.config(text=f"{try_again.num1update}+{try_again.num2update}")
            else:
                question.config(text=f"{try_again.num1update}-{try_again.num2update}")

            question.grid(row=8, column=3, padx=(10,3), pady=(0,50))
            space = Label(Easy, text="                 ", font=body_font, bg=color3)
            space.place(relx=0.5, rely=0.2)
            entry_box2.delete(0, "end")
            update_question_num()
            


 
       
        def resultPLUS():
            if try_again.operation == '+':
                return try_again.num1update + try_again.num2update
            else:
                return try_again.num1update - try_again.num2update

        def answer():
            global entry_box2, solving, question

            body_font = ('Verdana', 10)

            question = Label(Easy, text=" ", font=body_font, bg=color3)
            question.grid(row=8, column=3)
            

            entry_box2 = Entry(Easy)
            entry_box2.grid(row=14, column=3, padx=(5,5), pady=(0,50))
            
            submit_button = Button(Easy, text="Submit", command=lambda: submit(entry_box2))
            submit_button.grid(row=16, column=1, padx=(10,3), pady=(0,50))

            try_again_button = Button(Easy, text="Next", command=try_again)
            try_again_button.grid(row=16, column=4, sticky=W, padx=(200,600), pady=(0,0))

            try_again()
        answer()
        Easy.mainloop()

#Medium window      
    def Medium_window():
        def exit():
            Medium.destroy()
            
        Medium = Toplevel(ChooseLevel)
        Medium.title("Medium level")
        Medium.geometry("650x450")
        Medium.configure(bg = 'aquamarine4')

        color3 = 'aquamarine4'
        body_font = ('Verdana', 10)
        
        Label(Medium, text=entry_box1.get(), bg=color3, font=body_font).grid(row=1, column=3, padx=(250,5), pady=(0,0))
        Button(Medium, text="Quit", command=exit, font=body_font).grid(row=0, column=4, sticky=W, padx=(200,600), pady=(0,0))

        question_num = IntVar(value=0)
        
        def update_question_num():
            if question_num.get() < 5:
                question_num.set(question_num.get()+1)

        question_num_label = Label(Medium, textvariable=question_num, bg=color3, font=body_font)
        question_num_label.grid(row=3, column=2)

        Label(Medium, text="Question n.o:", bg=color3, font=body_font).grid(row=3, column=1) #padx=(100, 200), pady=(12,0))
        Label(Medium, text="L2:Medium", bg=color3, font=body_font).grid(row=3, column=4, padx=(100,500), pady=(0,1))

        num = [1, 2, 3, 4, 5, 6, 7, 8, 9]

        def submit(var1):
            body_font = ('Verdana', 10)
            colour1= 'red'
            colour2= 'green'
            
            if var1.get() == str(result()):
                correct = Label(Medium, text="Correct!", font=body_font, bg=colour2)
                correct.place(relx=0.5, rely=0.2)
                
                
            else:
                wrong = Label(Medium, text="Wrong!", font=body_font, bg=colour1)
                wrong.place(relx=0.5, rely=0.2)
                entry_box3.delete(0, "end")

            
        def try_again():
            if question_num.get() >=5: #stop after 5 questions
                return
            
            body_font = ('Verdana', 10)
            try_again.num1update = random.choice(num)
            try_again.num2update = random.choice(num)
            try_again.operation = random.choice(['*', '/'])

            if try_again.operation == '*':
                question.config(text=f"{try_again.num1update}ร{try_again.num2update}")
            else:
                if try_again.num1update % try_again.num2update !=0:
                    try_again.num1update *= try_again.num2update
                question.config(text=f"{try_again.num1update}รท{try_again.num2update}")

            question.grid(row=8, column=3, padx=(10,3), pady=(0,50))
            space = Label(Medium, text="                 ", font=body_font, bg=color3)
            space.place(relx=0.5, rely=0.2)
            entry_box3.delete(0, "end")
            update_question_num()
            


 
       
        def result():
            if try_again.operation == '*':
                return try_again.num1update * try_again.num2update
            else:
                return try_again.num1update // try_again.num2update

        def answer():
            global entry_box3, solving, question

            body_font = ('Verdana', 10)

            question = Label(Medium, text=" ", font=body_font, bg=color3)
            question.grid(row=8, column=3)
            

            entry_box3 = Entry(Medium)
            entry_box3.grid(row=14, column=3, padx=(5,5), pady=(0,50))
            
            submit_button = Button(Medium, text="Submit", font=body_font, command=lambda: submit(entry_box3))
            submit_button.grid(row=16, column=1, padx=(10,3), pady=(0,50))

            try_again_button = Button(Medium, text="Next", command=try_again, font=body_font)
            try_again_button.grid(row=16, column=4, sticky=W, padx=(200,600), pady=(0,0))

            try_again()
        answer()
        Medium.mainloop()             



#Hard window
    def Hard_window():
        def exit():
            Hard.destroy()
        Hard = Toplevel(ChooseLevel)
        Hard.title("Hard level")
        Hard.geometry("650x450")
        Hard.configure(bg = 'aquamarine4')

        body_font = ('Verdana', 10)

        color3 = 'aquamarine4'
        
        Label(Hard, text=entry_box1.get(), bg=color3).grid(row=1, column=3, padx=(250,5), pady=(0,0))
        Button(Hard, text="Quit", command=exit, font=body_font).grid(row=0, column=4, sticky=W, padx=(200,600), pady=(0,0))
        Label(Hard, text="Question n.o:", bg=color3, font=body_font).grid(row=3, column=1) #padx=(100, 200), pady=(12,0))
        Label(Hard, text="L3:Hard", bg=color3, font=body_font).grid(row=3, column=4, padx=(100,500), pady=(0,1))

        
        
        question_num = IntVar(value=0)
        
        def update_question_num():
            if question_num.get() < 5:
                question_num.set(question_num.get()+1)

        question_num_label = Label(Hard, textvariable=question_num, bg=color3)
        question_num_label.grid(row=3, column=2)

        num = [1, 2, 3, 4, 5, 6, 7, 8, 9]


        current_question = {'num1':0, 'num2':0, 'type':''}

        def submit(var1):
            body_font = ('Verdana', 10)
            colour1= 'red'
            colour2= 'green'

            user_answer = var1.get().strip()
            correct_answer = None

            if current_question['type'] == 'percentage':
                correct_answer = (current_question['num1']*100) /current_question['num2']
            elif current_question['type'] == 'fraction':
                correct_answer = current_question['num1']/current_question['num2']
            elif current_question['type'] == 'decimal':
                correct_answer = current_question['num1']/current_question['num2']

            if correct_answer is None:
                feedback = Label(Hard, text="Wrong", font=body_font, bg=colour1)
                feedback.place(relx=0.5, rely=0.2)
                return


            correct_answer = round(float(correct_answer), 4)

            

           
            try:
                user_answer == round(float(user_answer), 4)
                #feedback = Label(Hard, text="Correct!", font=body_font, bg=colour2)
            except ValueError:
                feedback = Label(Hard, text="Wrong", font=body_font, bg=colour1)
                feedback.place(relx=0.5, rely=0.2)
                entry_box3.delete(0, "end")
                return

            if user_answer == correct_answer:
                feedback = Label(Hard, text= "Correct!", font=body_font, bg=colour2)
            else:
                feedback = Label(Hard, text="Wrong", font=body_font, bg=color1)
                entry_box3.delete(0, "end")

            feedback.place(relx=0.5,  rely=0.2)

            


            

        def try_again():

            if question_num.get() >=5: #stop after 5 questions
                return

           # global current_question
            current_question = {'num1':0, 'num2':0, 'type':''}
           
            current_question['num1'] = random.choice(num)
            current_question['num2'] = random.choice(num)

            question_type = random.choice(['percentage', 'decimal', 'fraction'])
            current_question['type'] = question_type

            if question_type == 'percentage':
                question_text = f"What is {current_question['num1']} percent of {current_question['num2']}?"
            elif question_type == 'fraction':
                question_text = f"What is the fraction: {current_question['num1']}/{current_question['num2']} as a decimal?"
            elif question_type == 'decimal':
                question_text = f"What is {current_question['num1']} divided by {current_question['num2']} as a decimal?"
                    


            question.grid(row=8, column=3, padx=(10,3), pady=(0,50))


            
            space = Label(Hard, text="               .        ", font=body_font, bg=color3)
            space.place(relx=0.5, rely=0.2)

            question.config(text=question_text)
            entry_box3.delete(0, "end")
            update_question_num()
            


 
       
        def answer():
            global entry_box3, solving, question

            body_font = ('Verdana', 10)

            question = Label(Hard, text=" ", font=body_font, bg=color3)
            question.grid(row=8, column=3)
            

            entry_box3 = Entry(Hard)
            entry_box3.grid(row=14, column=3, padx=(5,5), pady=(0,50))
            
            submit_button = Button(Hard, text="Submit", command=lambda: submit(entry_box3))
            submit_button.grid(row=16, column=1, padx=(10,3), pady=(0,50))

            try_again_button = Button(Hard, text="Next", command=try_again)
            try_again_button.grid(row=16, column=4, sticky=W, padx=(200,600), pady=(0,0))

            try_again()
        answer()
        Hard.mainloop()             


    body_font = ('Verdana', 10)
    Button(ChooseLevel, text="Quit", command=exit, width=10, bg='light blue').grid(row=0, column=4, sticky=E, padx=(20,3), pady=(0,0))
    Label(ChooseLevel, text="Choose a level:", bg='cadet blue', fg='white', font=body_font).grid(row=1, column=3, padx=(50,10), pady=(5,10))
    Button(ChooseLevel, text="L1:Easy", command=Easy_window, bg='light blue', fg='cadet blue', font=body_font).grid(row=4, column=3, padx=(50,10), pady=(5,10))
    Button(ChooseLevel, text="L2:Medium", command=Medium_window, bg='light blue', fg='cadet blue', font=body_font).grid(row=5, column=3, padx=(50,10), pady=(5,10))
    Button(ChooseLevel, text="L3:Hard", command=Hard_window, bg='light blue', fg='cadet blue', font=body_font).grid(row=6, column=3, padx=(50,10), pady=(5,10))
  


def main():
    global main_window, entry_box1, error_label
    main_window = Tk()
    main_window.title("System")
    main_window.configure(bg='honeydew2')
    body_font = ('Verdana', 10)


     
    Button(main_window, text="quit", command=quit, width=10, bg='azure2', font=body_font).grid(row=0, column=4, padx=(20,3), pady=(0,0))
    Label(main_window,  text="Hello", width=12, bg='honeydew2', font=body_font).grid(row=2, column=3, sticky=E, padx=(10,30), pady=(0,0))
    Label(main_window,  text="Welcome to the Math Quiz", bg='honeydew2', font=body_font).grid(row=4, column=3, padx=(10,5), pady=(0,0))

    error_label = Label(main_window, text=" ", bg="honeydew2", fg="red", font=body_font)
    error_label.grid(row=11, column=4, padx=(0,0), pady=(0,50))
                     
    Label(main_window, text="Enter your full name:", bg='honeydew2', font=body_font).grid(row=10, column=3, padx=(10,3), pady=(50,0))
    Button(main_window, text="Start", command=ChooseLevelWindow, bg='azure2', font=body_font).grid(row=14, column=3, padx=(10,5), pady=(0,0))
    Label(main_window, text="by XYZ", bg='honeydew2', font=body_font).grid(row=5, column=3, padx=(10,5), pady=(0,0))

    entry_box1 = Entry(main_window)
    entry_box1.grid(row=11, column=3, padx=(10,0), pady=(0,50))

    
    



        
         
    main_window.mainloop()
main()
